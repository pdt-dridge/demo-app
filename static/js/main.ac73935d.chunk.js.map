{"version":3,"sources":["images/PagerDuty-Logo.png","App.js","templateList.js","reportWebVitals.js","index.js"],"names":["App","handleEditorChange","e","console","log","target","getContent","className","src","pdlogo","alt","width","height","initialValue","apiKey","init","menubar","plugins","toolbar","template_mdate_format","template_selected_content_classes","template_replace_values","businessService","priority","severity","incidentSummary","previousUpdates","template_preview_replace_values","templates","Array","title","description","content","url","onChange","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAe,MAA0B,2C,WCsE1BA,E,4MA/DbC,mBAAqB,SAACC,GACpBC,QAAQC,IACN,uBACAF,EAAEG,OAAOC,e,4CAIb,WACE,OACA,sBAAKC,UAAU,MAAf,UACE,gCACE,4BAAG,qBAAKC,IAAKC,EAAQC,IAAI,GAAGC,MAAM,QAAQC,OAAO,WACjD,sEAEF,cAAC,IAAD,CACEC,aAAa,kDACbC,OAAO,mDACPC,KAAM,CACJH,OAAQ,MACRD,MAAO,MACPK,QAAS,2CACTC,QAAS,CACP,oFACA,mDACA,4EAEFC,QACI,yQAOJC,sBAAuB,mBACvBC,kCAAmC,6BACnCC,wBAAyB,CACvBC,gBAAiB,iCACjBC,SAAU,0BACVC,SAAU,0BACVC,gBAAiB,yBACjBC,gBAAiB,0BAEnBC,gCAAiC,CAC/BL,gBAAiB,iCACjBC,SAAU,0BACVC,SAAU,0BACVC,gBAAiB,yBACjBC,gBAAiB,0BAEnBE,UCvDD,IAAIC,MACT,CACEC,MAAO,wBACPC,YAAa,mEACbC,QAAS,kGAEX,CACEF,MAAO,0BACPC,YAAa,sDACbE,IAAK,+BDgDHC,SAAUC,KAAKlC,qBAEhB,sCACQ,8CADR,2C,GAvDWmC,IAAMC,WEMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac73935d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/PagerDuty-Logo.b98a1304.png\";","\nimport React from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport pdlogo from './images/PagerDuty-Logo.png';\nimport {getTemplates} from './templateList.js';\n\nclass App extends React.Component {\n  handleEditorChange = (e) => {\n    console.log(\n      'Content was updated:',\n      e.target.getContent()\n    );\n  }\n\n  render() {\n    return (\n    <div className=\"App\">\n      <div>\n        <p><img src={pdlogo} alt=\"\" width=\"245px\" height=\"62px\" /></p>\n        <h2>Status Update Email Notifications</h2>\n      </div>\n      <Editor \n        initialValue=\"<p>^^ Select a Template from the icon above</p>\"\n        apiKey=\"mv9mc9l0bmixqowosqc3mq7nekrezxptz3zlsgfohlj7zscf\"\n        init={{\n          height: \"500\",\n          width: \"80%\",\n          menubar: 'edit view insert format tools table help',\n          plugins: [\n            'a11ychecker advcode advlist anchor autolink code fullscreen help image imagetools',\n            ' lists link media noneditable powerpaste preview',\n            ' searchreplace table template tinymcespellchecker visualblocks wordcount'\n          ],\n          toolbar:\n              'template code a11ycheck | \\\n               undo redo | \\\n               formatselect | \\\n               bold italic forecolor backcolor | \\\n               bullist numlist outdent indent | \\\n               alignleft aligncenter alignright alignjustify | \\\n               help',\n          template_mdate_format: '%d/%m/%Y : %H:%M',\n          template_selected_content_classes: 'selcontent selectedcontent',\n          template_replace_values: {\n            businessService: 'todo: incident.businessService',\n            priority: 'todo: incident.priority',\n            severity: 'todo: incident.severity',\n            incidentSummary: 'todo: incident.summary',\n            previousUpdates: 'todo: getPrevUpdates()',\n          },\n          template_preview_replace_values: {\n            businessService: 'todo: incident.businessService',\n            priority: 'todo: incident.priority',\n            severity: 'todo: incident.severity',\n            incidentSummary: 'todo: incident.summary',\n            previousUpdates: 'todo: getPrevUpdates()',\n          },\n          templates : getTemplates(),\n        }}\n        onChange={this.handleEditorChange}\n      />\n       <p>\n          Edit <code>src/App.js</code> and save to reload this page.\n        </p>\n\n    </div>\n    );\n  }\n}\n\nexport default App;","export function getTemplates() {\n\n  return new Array(\n    {\n      title: 'Date modified example',\n      description: 'Adds a timestamp indicating the last time the document modified.',\n      content: '<p>Last Modified: <time class=\"mdate\">This will be replaced with the date modified.</time></p>'\n    },\n    {\n      title: 'DBS Incident Management',\n      description: 'Template for DBS Incident Management Status Updates',\n      url: \"template/dbsTemplate.html\"\n    }\n  );\n  \n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}